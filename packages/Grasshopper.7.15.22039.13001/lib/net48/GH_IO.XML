<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GH_IO</name>
    </assembly>
    <members>
        <member name="T:GH_IO.Serialization.GH_Archive">
            <summary>
            This is the base archive class which takes care of all (de)serialization and messaging.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.GrasshopperBinaryExtension">
            <summary>
            Gets the file extension (including the dot) associated with Grasshopper® Binary data.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.GrasshopperXmlExtension">
            <summary>
            Gets the file extension (including the dot) associated with Grasshopper® XML data.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.GrasshopperUserExtension">
            <summary>
            Gets the file extension (including the dot) associated with Grasshopper® User Object file.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.GH_IO_Version">
            <summary>
            Gets the version number of the current GH_IO build.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.AddMessage(System.String,GH_IO.Serialization.GH_Message_Type)">
            <summary>
            Add a new message to the record.
            </summary>
            <param name="messageText">Message text.</param>
            <param name="messageType">Message type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if message text is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.AddMessage(GH_IO.Serialization.GH_Message)">
            <summary>
            Add a new message to the record.
            </summary>
            <param name="message">Message to add</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the message is a null reference.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.MessageCount">
            <summary>
            Gets the number of messages recorded since the most recent IO operation began.
            </summary>
            <returns>The number of recorded messages.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.MessageCount(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the number of messages recorded since the most recent IO operation began. 
            Message count can be filtered by message type.
            </summary>
            <param name="includeInfo">If true, info messages will be included in the count.</param>
            <param name="includeWarnings">If true, warnings will be included in the count.</param>
            <param name="includeErrors">If true, errors will be included in the count.</param>
            <returns>The number of recoded messages that pass the type filters.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.ClearMessages">
            <summary>
            Remove all messages from the log.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.Messages">
            <summary>
            Gets the internal list of messages.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.WorstCaseMessageType">
            <summary>
            Gets the worst case message type. 
            If the record contains at least 1 error, the worst case is GH_Message_Type.error. 
            If the record contains no errors, but at least 1 warning, 
            the worst case is GH_Message_Type.warning. 
            If the record contains no messages or only infos, the worst case type is GH_Message_Type.info.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.ShowMessageLog">
            <summary>
            Displays the message log viewer. You should typically only display the viewer if 
            the WorstCaseMessageType equals GH_Message_Type.warning or GH_Message_Type.error
            </summary>
            <returns>The closing flag for the displayed log form.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.CreateTopLevelNode(System.String)">
            <summary>
            Creates and returns a new root node for this archive in the form of a GH_IWriter instance. 
            Typically you do not call this method. If you want to add an object to the archive, use AppendObject() instead.
            </summary>
            <param name="rootName">Name of root object.</param>
            <returns>The GH_IWriter incarnation of the GH_Chunk that represents the new Node. </returns>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.GetRootNode">
            <summary>
            Gets the root node of this archive. 
            Typically you do not need to modify the Root. 
            Use functions like CreateTopLevelNode(), AppendObject() and ExtractObject() instead. 
            If you modify the Root node, you may corrupt the archive.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.CreateNewRoot(System.Boolean)">
            <summary>
            Discards the current data tree and instantiates a new root node. 
            This root node contains some comments, a version value containing the current version of GH_IO.dll 
            and a DateTime value containing the current date and time.
            </summary>
            <param name="forWriting">If true, all data fields are reset.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.CompareArchiveVersion">
            <summary>
            Parses the root node if it exists for Versioning information and creates
            warning messages if the archive version is newer than the local version.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.Path">
            <summary>
            Gets the path to the file from which this archive was read and/or written to. 
            If the archive hasn't been read or written yet, this field will be null.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.IsPath">
            <summary>
            Gets a value that indicates whether or not the path field has been set.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.IsBinaryPath">
            <summary>
            Gets a value that indicates whether the Path field points to a Binary Grasshopper file.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.IsXmlPath">
            <summary>
            Gets a value that indicates whether the Path field points to an Xml Grasshopper file.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Archive.FileName">
            <summary>
            Gets the filename (without extension) of the currently loaded data tree.
            If the path field has not been set, "unnamed" is returned.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.SaveFileDialog(System.String,System.String@,System.Collections.Generic.List{System.String})">
            <summary>
            Displays a standard SaveFileDialog with all the fields set to cater for Grasshopper files.
            </summary>
            <param name="title">Title of the dialog. If null, the default title will be used.</param>
            <param name="filePath">Path to file picked by user. If file_path represents a valid string,
            the dialog is set up to match.</param>
            <param name="additionalFilters">A list of additional file format filters or null. 
            Filter strings must be in typical FileDialog.Filter syntax: <c>"File Name (*.ext)|*.ext"</c></param>
            <returns>True is user picked a new path, False if user cancelled.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.OpenFileDialog(System.String,System.String@,System.Collections.Generic.List{System.String})">
            <summary>
            Displays a standard OpenFileDialog with all the fields set to cater for Grasshopper files.
            </summary>
            <param name="title">Title of the dialog. If null, the default title will be used.</param>
            <param name="filePath">Path to file picked by user. 
            If file_path represents a valid string,
            the dialog is set up to match.</param>
            <param name="additionalFilters">A list of additional file format filters or null. 
            Filter strings must be in typical FileDialog.Filter syntax: <c>"File Name (*.ext)|*.ext"</c></param>
            <returns>True is user picked a path, False if user cancelled.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.AppendObject(GH_IO.GH_ISerializable,System.String)">
            <summary>
            Appends a target object into the root node of this archive tree. 
            If the root doesn't exist yet, it will be created. Existing objects at the root scope 
            will not be affected.
            </summary>
            <param name="target">Object to append. Cannot be null.</param>
            <param name="targetName">Name of object to append, name must be unique.</param>
            <returns>True on succes, false on failure.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if target is a null reference.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the target_name is null or empty.</exception>
            <example> This sample shows how to create a new archive and serialize a single top level object.
            <code lang="cs">
            bool CreateFile(string file_name, GH_ISerializable target, string target_name) 
            {
              GH_Archive archive = new GH_Archive();
              archive.AppendObject(target, target_name);
              return archive.WriteToFile(file_name, true);
            }
            </code>
            </example>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.ExtractObject(GH_IO.GH_ISerializable,System.String)">
            <summary>
            Extract a target object from the data tree. 
            </summary>
            <param name="target">Object to extract. Cannot be null.</param>
            <param name="targetName">Name of object to extract, name must identify an existing chunk.</param>
            <returns>True on succes, false on failure.</returns>
            <exception cref="T:System.MemberAccessException">Thrown if the Root node hasn't been instantiated yet.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if target is a null reference.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the target_name is null or empty.</exception>
            <exception cref="T:System.MemberAccessException">Thrown if the target_name cannot be resolved.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.WriteToFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Writes the current tree to a file.
            </summary>
            <param name="fileName">Path of file to write to. If the extension is not a recognized Grasshopper extension, 
            an exception will be thrown.</param>
            <param name="overwrite">True to overwrite file at specified location.</param>
            <param name="rememberPath">If True, the MRU path field will be updated to reflect the new path.</param>
            <returns>True on succes, false if file already exists and overwrite is set to false.</returns>
            <exception cref="T:System.MemberAccessException">Thrown if the root of the current archive hasn't been instantiated yet.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if file_name is either null or empty.</exception>
            <exception cref="T:System.IO.IOException">Thrown if the file_name doesn't represent a known file extension.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.ReadFromFile(System.String)">
            <summary>
            Reads a new archive tree from a file.
            </summary>
            <param name="fileName">Path of file to parse.</param>
            <returns>True on success, false on failure. If the read operation fails, 
            all the member fields of this archive ought to be treated as invalid.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file doesn't exist.</exception>
            <exception cref="T:System.IO.IOException">Thrown if the file_name doesn't represent a known file extension.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.WriteToFile_Xml(System.String)">
            <summary>
            Serializes the current data tree into an Xml Grasshopper file.
            </summary>
            <param name="fileName">Path of file to write.</param>
            <returns>True on success, or throws exceptions on failure.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.WriteToFile_Binary(System.String)">
            <summary>
            Serializes the current data tree into a Binary Grasshopper file.
            </summary>
            <param name="fileName">Path of file to write.</param>
            <returns>True on success, or throws exceptions on failure.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.Serialize_Xml">
            <summary>
            Serializes the data tree into an Xml string.
            </summary>
            <returns>A string containing the Xml content.</returns>
            <exception cref="T:System.MemberAccessException">Thrown if the root of the current archive hasn't been instantiated yet.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.Deserialize_Xml(System.String)">
            <summary>
            Deserializes an Xml string.
            </summary>
            <param name="xmlContent">Xml to deserialize.</param>
            <returns>True on success, false on failure.</returns>
            <exception cref="T:System.Xml.XmlException">Thrown if xml_content is not a valid Grasshopper Xml stream.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.Serialize_Binary">
            <summary>
            Serializes the data tree into a Binary byte array.
            </summary>
            <returns>A byte array containing the Binary stream.</returns>
            <exception cref="T:System.MemberAccessException">Thrown if the root of the current archive hasn't been instantiated yet.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Archive.Deserialize_Binary(System.Byte[])">
            <summary>
            Deserializes an array of bytes.
            </summary>
            <param name="data">Byte array to deserialize.</param>
            <returns>True on success, false on failure.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if data is a null reference.</exception>
        </member>
        <member name="T:GH_IO.Serialization.EncodedStringWriter">
            <summary>
            This class is needed to override the UTF-16 encoding property of the default DotNET StringWriter. 
            </summary>
            <exclude/>
        </member>
        <member name="P:GH_IO.Serialization.EncodedStringWriter.Encoding">
            <summary>
            Always return UTF-8.
            </summary>
        </member>
        <member name="T:GH_IO.Serialization.GH_Compression">
            <summary>
            Provides static methods for compression of byte-arrays.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Compression.#ctor">
            <summary>
            This class only exposes static methods and cannot be constructed.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Compression.Compress(System.Byte[])">
            <summary>
            Compress an array of bytes using the Deflate algorithm.
            </summary>
            <param name="data">Byte array to compress.</param>
            <returns>An array of compressed bytes.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Compression.Decompress(System.Byte[])">
            <summary>
            Decompress an array of bytes using the Deflate algorithm.
            </summary>
            <param name="compressedData">Byte array to decompress.</param>
            <returns>An array of decompressed bytes.</returns>
        </member>
        <member name="T:GH_IO.Serialization.ID">
            <summary>
            An ID is used to uniquely identify a specific item. 
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.ID.#ctor(System.String)">
            <summary>
            Constuctor for IDs.
            </summary>
            <param name="name">Name of id.</param>
        </member>
        <member name="M:GH_IO.Serialization.ID.#ctor(System.String,System.Int32)">
            <summary>
            Constructor for IDs.
            </summary>
            <param name="name">Name of id.</param>
            <param name="index">Index of id. Valid values are:
            <para>-1 = no index</para>
            <para>0 to int.MaxValue = valid index</para></param>
        </member>
        <member name="P:GH_IO.Serialization.ID.Name">
            <summary>
            Gets the name of this ID.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.ID.HasName">
            <summary>
            Gets whether the name has been set. 
            Every valid ID must have a name.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.ID.Index">
            <summary>
            Gets the index of this ID, if there is no valid index then -1 is returned.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.ID.HasIndex">
            <summary>
            Gets whether the index has been set.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.ID.Hash">
            <summary>
            Gets the hash code.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.ID.ToString">
            <summary>
            Gets a string representation for this ID.
            </summary>
        </member>
        <member name="T:GH_IO.Serialization.GH_Chunk">
            <summary>
            Full implementation of GH_IChunk, GH_IReader, GH_IWriter, GH_IBinarySupport and GH_IXmlSupport. 
            Instances of this class are usually disguised as one of the interfaces it implements.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.#ctor">
            <summary>
            Blank constructor. You typically do not need to create your own Chunks. The GH_Archive class 
            will create top-level chunks and existing chunks can create child chunks.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.#ctor(GH_IO.Serialization.GH_Archive)">
            <summary>
            Constructor. You typically do not need to create your own Chunks. The GH_Archive class 
            will create top-level chunks and existing chunks can create child chunks.
            </summary>
            <param name="chunk_archive">Owner archive.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.#ctor(GH_IO.Serialization.GH_Archive,System.String)">
            <summary>
            Constructor. You typically do not need to create your own Chunks. The GH_Archive class 
            will create top-level chunks and existing chunks can create child chunks.
            </summary>
            <param name="chunk_archive">Owner archive.</param>
            <param name="chunk_name">Name of this chunk.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.#ctor(GH_IO.Serialization.GH_Archive,System.String,System.Int32)">
            <summary>
            Constructor. You typically do not need to create your own Chunks. The GH_Archive class 
            will create top-level chunks and existing chunks can create child chunks.
            </summary>
            <param name="chunk_archive">Owner archive.</param>
            <param name="chunk_name">Name of this chunk.</param>
            <param name="chunk_index">Index of this chunk.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.InstantiateRoot(GH_IO.Serialization.GH_Archive)">
            <summary>
            Construct a new instance of GH_Chunk which acts as a Root node. If you <b>must</b> 
            create a chunk from scratch, use this static method to create one.
            </summary>
            <param name="owner">The archive which owns this chunk.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the owner is a null reference.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.AddMessage(System.String,GH_IO.Serialization.GH_Message_Type)">
            <summary>
            Log a new message with the top-level archive. 
            Messages are collected during read/write operations, 
            and can be displayed to the user upon completion using GH_Archive.ShowMessageLog().
            </summary>
            <param name="m">Message text.</param>
            <param name="t">Message type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if message text is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.CopyValuesFromChunk(GH_IO.Serialization.GH_Chunk)">
            <summary>
            Copy all values and sub-chunks from another chunk.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.CopyValuesToChunk">
            <summary>
            Copy all values and sub-chunks in this chunk to another chunk
            which does not point to the same archive.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.m_name">
            <summary>
            Name of this chunk. This field is set only once, during construction.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.m_index">
            <summary>
            Index of this chunk. This field is set only once, during construction. 
            A negative index indicates no index qualifier has been set.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.m_comments">
            <summary>
            List of text comments. This list is automatically instantiated once the first comment is added.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.m_archive">
            <summary>
            Pointer to the archive that owns the Root of the tree this chunk belongs to.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.Archive">
            <summary>
            Gets a pointer to the archive that owns the Root of the tree this chunk belongs to.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.ArchiveLocation">
            <summary>
            Gets a string representing the URI with which the archive is associated. 
            The location may be a null string.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.HasName">
            <summary>
            Gets the name validity of this item. 
            The item is considered to have an invalid name if string.IsNullOrEmpty(name)
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.HasIndex">
            <summary>
            Gets the index existence implication. The item is considered to have an index qualifier 
            if the index value is larger than or equal to zero.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.HasComments">
            <summary>
            Gets a value that indicates whether or not comments have been stored in this chunk.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.Name">
            <summary>
            Gets the name of this chunk. The name is set by the owner of this chunk. 
            Names must be at least 1 character long. 
            The combination of name+index is always unique among a set of chunks in a single litter.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.Index">
            <summary>
            Gets the index of this chunk. The index is set by the owner of this chunk. 
            Indices smaller than zero imply no index has been set. 
            The combination of name+index is always unique among a set of chunks in the same litter.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.AddComment(System.String)">
            <summary>
            Adds a text comment to this chunk. Comments are serialized only if the output flavour is a 
            human readable format. Comments are never deserialized, they are purely for the benefit of the
            humans reading the file data.
            </summary>
            <param name="comment_text">The content of the comment, 
            text might be altered if it contains invalid characters for a chosen format flavour.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the content text is either null or empty.</exception>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.name_comp">
            <summary>
            Comparison flag to use when comparing names.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.m_items">
            <summary>
            The list of nodes contained within this chunk.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.ItemCount">
            <summary>
            Gets the number of items contained in this chunk. 
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.Items">
            <summary>
            Gets a pointer to the internal list of items. 
            Do not access this list unless you know what you are doing.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.FindItem(System.String)">
            <summary>
            Finds the first item that matches the given name. 
            Only items without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to search for.</param>
            <returns>The item that matches the given name, 
            or null of no matching item could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.FindItem(System.String,System.Int32)">
            <summary>
            Finds the first item that matches the given name and index. 
            Only items with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to search for.</param>
            <param name="index">Index of item to search for. 
            If less than zero, then FindItem(string name) is called instead.</param>
            <returns>The item that matches the given name and index, 
            or null of no matching item could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.ItemExists(System.String)">
            <summary>
            Gets the occupancy for a specific item name. Only items without index qualifiers are considered.
            </summary>
            <param name="name">Name of item to check for.</param>
            <returns>True if an item with a similar name already exists, false if not.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.ItemExists(System.String,System.Int32)">
            <summary>
            Checks whether an item with the specified name and index exists. 
            Only items with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to test for.</param>
            <param name="index">Index of item to test for. 
            If index is less than zero, then ItemExists(string name) is called instead.</param>
            <returns>True if an item with the specified name and index exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.RemoveItem(System.String)">
            <summary>
            Remove an unindexed item from this chunk.
            </summary>
            <param name="itemName">Name of item.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.RemoveItem(System.String,System.Int32)">
            <summary>
            Remove an indexed item from this chunk.
            </summary>
            <param name="itemName">Name of item.</param>
            <param name="itemIndex">Index of item.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="T:GH_IO.Serialization.GH_Chunk.ChunkKeyedCollection">
            <summary>
            Represents a collection of chunks with associated IDs
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.ChunkKeyedCollection.#ctor">
            <summary>
            Create a new collection.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.ChunkKeyedCollection.TryGetValue(GH_IO.Serialization.ID,GH_IO.Serialization.GH_Chunk@)">
            <summary>
            Try and find the chunk that belongs to a given ID.
            </summary>
            <param name="id">ID to look for.</param>
            <param name="chunk">Chunk result.</param>
            <returns>True is a chunk was found, false if otherwise.</returns>
        </member>
        <member name="F:GH_IO.Serialization.GH_Chunk.m_chunks">
            <summary>
            Dictionary of sub-chunks contained within this chunk.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.ChunkCount">
            <summary>
            Gets the number of child chunks contained in this chunk. 
            The set of all child chunks is referred to as a 'litter'.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Chunk.Chunks">
            <summary>
            Gets a pointer to the internal list of child chunks. 
            Do not access this list unless you know what you are doing.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.FindChunk(System.String)">
            <summary>
            Finds the first chunk in the litter that matches the given name. 
            Only chunks without index qualifiers are considered.
            </summary>
            <param name="name">Name of chunk to search for.</param>
            <returns>The child chunk that matches the given name, 
            or null of no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.FindChunk(System.String,System.Int32)">
            <summary>
            Finds the first chunk in the list that matches the given name and index. 
            Only chunks with index qualifiers are considered.
            </summary>
            <param name="name">Name of chunk to search for.</param>
            <param name="index">Index of chunk to search for. 
            If less than zero, FindChunk(string chunk_name) is called instead.</param>
            <returns>The child chunk that matches the given name and index, 
            or null of no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.ChunkExists(System.String)">
            <summary>
            Checks whether a chunk with the specified name exists in the litter. 
            Only chunks without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of chunk to test for.</param>
            <returns>True if a chunk with the specified name exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.ChunkExists(System.String,System.Int32)">
            <summary>
            Checks whether a chunk with the specified name and index exists in the litter. 
            Only chunks with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of chunk to test for.</param>
            <param name="index">Index of chunk to test for. 
            If less than zero, ChunkExists(string name) is called instead.</param>
            <returns>True if a chunk with the specified name and index exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.AddChunk(GH_IO.Serialization.GH_Chunk)">
            <summary>
            Add a new chunk to the collection. Chunk must be valid.
            </summary>
            <param name="chunk">Chunk to add.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.CreateChunk(System.String)">
            <summary>
            Create a new child chunk with the specified name and without an index qualifier. 
            If another chunk already exists with similar properties, an exception will be thrown.
            </summary>
            <param name="chunk_name">Name of new child.</param>
            <returns>The newly created child chunk.</returns>
            <exception cref="T:System.ArgumentException">
            Thrown if the name+index coordinte is already occupied by another chunk.
            </exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.CreateChunk(System.String,System.Int32)">
            <summary>
            Create a new child chunk with the specified name and index qualifier. 
            If another chunk already exists with similar properties, an exception will be thrown.
            </summary>
            <param name="chunk_name">Name of new child.</param>
            <param name="chunk_index">Index of new child.</param>
            <returns>The newly created child chunk.</returns>
            <exception cref="T:System.ArgumentException">
            Thrown if the name+index coordinte is already occupied by another chunk.
            </exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.RemoveChunk(System.String)">
            <summary>
            Remove the first chunk with a matching name. 
            Only chunks without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="chunk_name">Name of chunk to remove.</param>
            <returns>True is chunk was removed, false if no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.RemoveChunk(System.String,System.Int32)">
            <summary>
            Remove the first chunk with a matching name and index. 
            Only chunks with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="chunk_name">Name of chunk to remove.</param>
            <param name="chunk_index">Index of chunk to remove.</param>
            <returns>True is chunk was removed, false if no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.RemoveChunk(GH_IO.Serialization.GH_IChunk)">
            <summary>
            Remove the specified chunk from the litter.
            </summary>
            <param name="chunk">Chunk to remove.</param>
            <returns>True is chunk was removed, false if chunk is not part of this litter.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if chunk is a null reference.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.Write(System.IO.BinaryWriter)">
            <summary>
            Write this chunk and all child chunks to a binary stream.
            </summary>
            <param name="writer">The Binary writer to use, cannot be null.</param>
            <exception cref="T:System.MemberAccessException">Thrown if the name of this chunk is either null or empty.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.Read(System.IO.BinaryReader)">
            <summary>
            Read this chunk and all child chunks from a binary stream.
            </summary>
            <param name="reader">The Binary reader to use, cannot be null.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.Write(System.Xml.XmlWriter)">
            <summary>
            Serialize this chunk into an Xml stream.
            </summary>
            <param name="writer">Xml writer used for serialization.</param>
            <exception cref="T:System.MemberAccessException">Thrown if</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.Read(System.Xml.XmlNode)">
            <summary>
            Read this chunk and all child chunks from an Xml node.
            </summary>
            <param name="node">The Xml node to deserialize from, cannot be null.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.AddItem(GH_IO.Types.GH_Item)">
            <summary>
            Add an item to the items dictionary. You must make sure there is no collision and that the item is fully valid.
            </summary>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetBoolean(System.String,System.Boolean)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetBoolean(System.String,System.Int32,System.Boolean)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetByte(System.String,System.Byte)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetByte(System.String,System.Int32,System.Byte)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInt32(System.String,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInt32(System.String,System.Int32,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInt64(System.String,System.Int64)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInt64(System.String,System.Int32,System.Int64)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetSingle(System.String,System.Single)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetSingle(System.String,System.Int32,System.Single)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDouble(System.String,System.Double)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDouble(System.String,System.Int32,System.Double)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDecimal(System.String,System.Decimal)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDecimal(System.String,System.Int32,System.Decimal)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDate(System.String,System.DateTime)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDate(System.String,System.Int32,System.DateTime)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetGuid(System.String,System.Guid)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetGuid(System.String,System.Int32,System.Guid)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetString(System.String,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetString(System.String,System.Int32,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPath(System.String,System.String,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="absolutePath">Absolute path to store.</param>
            <param name="basePath">Base path. This will be used to also store a relative path.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="absolutePath">Absolute path to store.</param>
            <param name="basePath">Base path. This will be used to also store a relative path.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.MakeRelativePath(System.String,System.String)">
            <summary>
            Creates a relative path from one file or folder to another. 
            Method adapted from StackOverflow post: 
            http://stackoverflow.com/questions/275689/how-to-get-relative-path-from-absolute-path
            </summary>
            <param name="source">Contains the directory that defines the start of the relative path.</param>
            <param name="target">Contains the path that defines the endpoint of the relative path.</param>
            <returns>The relative path from the start directory to the end path or null if no relative path could be made.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if either source or target is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingPoint(System.String,System.Drawing.Point)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingPoint(System.String,System.Int32,System.Drawing.Point)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingPointF(System.String,System.Drawing.PointF)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingPointF(System.String,System.Int32,System.Drawing.PointF)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingSize(System.String,System.Drawing.Size)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingSize(System.String,System.Int32,System.Drawing.Size)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingSizeF(System.String,System.Drawing.SizeF)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingSizeF(System.String,System.Int32,System.Drawing.SizeF)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingRectangle(System.String,System.Drawing.Rectangle)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingRectangle(System.String,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingRectangleF(System.String,System.Drawing.RectangleF)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingRectangleF(System.String,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingColor(System.String,System.Drawing.Color)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingColor(System.String,System.Int32,System.Drawing.Color)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingBitmap(System.String,System.Drawing.Bitmap)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDrawingBitmap(System.String,System.Int32,System.Drawing.Bitmap)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetByteArray(System.String,System.Byte[])">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetByteArray(System.String,System.Int32,System.Byte[])">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDoubleArray(System.String,System.Double[])">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetDoubleArray(System.String,System.Int32,System.Double[])">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPoint2D(System.String,GH_IO.Types.GH_Point2D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPoint2D(System.String,System.Int32,GH_IO.Types.GH_Point2D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPoint3D(System.String,GH_IO.Types.GH_Point3D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPoint3D(System.String,System.Int32,GH_IO.Types.GH_Point3D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPoint4D(System.String,GH_IO.Types.GH_Point4D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPoint4D(System.String,System.Int32,GH_IO.Types.GH_Point4D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInterval1D(System.String,GH_IO.Types.GH_Interval1D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInterval1D(System.String,System.Int32,GH_IO.Types.GH_Interval1D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInterval2D(System.String,GH_IO.Types.GH_Interval2D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetInterval2D(System.String,System.Int32,GH_IO.Types.GH_Interval2D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetLine(System.String,GH_IO.Types.GH_Line)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetLine(System.String,System.Int32,GH_IO.Types.GH_Line)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetBoundingBox(System.String,GH_IO.Types.GH_BoundingBox)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetBoundingBox(System.String,System.Int32,GH_IO.Types.GH_BoundingBox)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPlane(System.String,GH_IO.Types.GH_Plane)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetPlane(System.String,System.Int32,GH_IO.Types.GH_Plane)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetVersion(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="major">Major component of Version structure.</param>
            <param name="minor">Minor component of Version structure.</param>
            <param name="revision">Revision component of Version structure.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetVersion(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="major">Major component of Version structure.</param>
            <param name="minor">Minor component of Version structure.</param>
            <param name="revision">Revision component of Version structure.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetVersion(System.String,GH_IO.Types.GH_Version)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.SetVersion(System.String,System.Int32,GH_IO.Types.GH_Version)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetBoolean(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetBoolean(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetByte(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetByte(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInt32(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInt32(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInt64(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInt64(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetSingle(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetSingle(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDouble(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDouble(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDecimal(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDecimal(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDate(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDate(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetGuid(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetGuid(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetString(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetString(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPath(System.String,System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="basePath">Base path for relative path resolution.</param>
            <returns>An array of path strings. If the resolved relative path is different
            from the stored absolute path, an array of two strings will be returned [absolute, relative].</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPath(System.String,System.Int32,System.String)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="basePath">Base path for relative path resolution.</param>
            <returns>An array of path strings. If the resolved relative path is different
            from the stored absolute path, an array of two strings will be returned [absolute, relative].</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingPoint(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingPoint(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingPointF(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingPointF(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingSize(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingSize(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingSizeF(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingSizeF(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingRectangle(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingRectangle(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingRectangleF(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingRectangleF(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingColor(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingColor(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingBitmap(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDrawingBitmap(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetByteArray(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetByteArray(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDoubleArray(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetDoubleArray(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPoint2D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPoint2D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPoint3D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPoint3D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPoint4D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPoint4D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInterval1D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInterval1D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInterval2D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetInterval2D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetLine(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetLine(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetBoundingBox(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetBoundingBox(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPlane(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetPlane(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetVersion(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.GetVersion(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetBoolean(System.String,System.Boolean@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetBoolean(System.String,System.Int32,System.Boolean@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetByte(System.String,System.Byte@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetByte(System.String,System.Int32,System.Byte@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInt32(System.String,System.Int32@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInt32(System.String,System.Int32,System.Int32@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInt64(System.String,System.Int64@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInt64(System.String,System.Int32,System.Int64@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetSingle(System.String,System.Single@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetSingle(System.String,System.Int32,System.Single@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDouble(System.String,System.Double@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDouble(System.String,System.Int32,System.Double@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDecimal(System.String,System.Decimal@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDecimal(System.String,System.Int32,System.Decimal@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDate(System.String,System.DateTime@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDate(System.String,System.Int32,System.DateTime@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetGuid(System.String,System.Guid@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetGuid(System.String,System.Int32,System.Guid@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetString(System.String,System.String@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetString(System.String,System.Int32,System.String@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingPoint(System.String,System.Drawing.Point@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingPoint(System.String,System.Int32,System.Drawing.Point@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingPointF(System.String,System.Drawing.PointF@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingPointF(System.String,System.Int32,System.Drawing.PointF@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingSize(System.String,System.Drawing.Size@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingSize(System.String,System.Int32,System.Drawing.Size@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingSizeF(System.String,System.Drawing.SizeF@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingSizeF(System.String,System.Int32,System.Drawing.SizeF@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingRectangle(System.String,System.Drawing.Rectangle@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingRectangle(System.String,System.Int32,System.Drawing.Rectangle@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingRectangleF(System.String,System.Drawing.RectangleF@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingRectangleF(System.String,System.Int32,System.Drawing.RectangleF@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingColor(System.String,System.Drawing.Color@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetDrawingColor(System.String,System.Int32,System.Drawing.Color@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPoint2D(System.String,GH_IO.Types.GH_Point2D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPoint2D(System.String,System.Int32,GH_IO.Types.GH_Point2D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPoint3D(System.String,GH_IO.Types.GH_Point3D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPoint3D(System.String,System.Int32,GH_IO.Types.GH_Point3D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPoint4D(System.String,GH_IO.Types.GH_Point4D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPoint4D(System.String,System.Int32,GH_IO.Types.GH_Point4D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInterval1D(System.String,GH_IO.Types.GH_Interval1D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInterval1D(System.String,System.Int32,GH_IO.Types.GH_Interval1D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInterval2D(System.String,GH_IO.Types.GH_Interval2D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetInterval2D(System.String,System.Int32,GH_IO.Types.GH_Interval2D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetLine(System.String,GH_IO.Types.GH_Line@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetLine(System.String,System.Int32,GH_IO.Types.GH_Line@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetBoundingBox(System.String,GH_IO.Types.GH_BoundingBox@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetBoundingBox(System.String,System.Int32,GH_IO.Types.GH_BoundingBox@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPlane(System.String,GH_IO.Types.GH_Plane@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetPlane(System.String,System.Int32,GH_IO.Types.GH_Plane@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetVersion(System.String,GH_IO.Types.GH_Version@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_Chunk.TryGetVersion(System.String,System.Int32,GH_IO.Types.GH_Version@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="T:GH_IO.Serialization.GH_LooseChunk">
            <summary>
            A utility class for creating partial archives.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_LooseChunk.#ctor(System.String)">
            <summary>
            Create a new loose chunk. A loose chunk does not have an owner archive 
            and thus cannot store runtime messages.
            </summary>
            <param name="chunk_name">Name of this chunk.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_LooseChunk.#ctor(System.String,System.Int32)">
            <summary>
            Create a new loose chunk. A loose chunk does not have an owner archive 
            and thus cannot store runtime messages.
            </summary>
            <param name="chunk_name">Name of this chunk.</param>
            <param name="chunk_index">Index of this chunk, negative one for no index.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_LooseChunk.Serialize_Binary">
            <summary>
            Serializes the data tree into a byte array.
            </summary>
            <returns>An array of bytes representing the Loose chunk.</returns>
            <example> This sample shows how to create a new loose chunk and serialize some values.
            <code lang="cs">
            public byte[] CreateBinary(string archive_name, string[] item_names, int[] item_values)
            {
              GH_LooseChunk chunk = new GH_LooseChunk(archive_name);
              
              for (int i = 0; i &lt; item_names.Length; i++)
              {
                chunk.SetInt32(item_names[i], i, item_values[i]);
              }
              
              return chunk.Serialize_Binary();
            }
            </code>
            </example>
        </member>
        <member name="M:GH_IO.Serialization.GH_LooseChunk.Deserialize_Binary(System.Byte[])">
            <summary>
            Deserializes a byte array.
            </summary>
            <param name="content">Byte array to deserialize.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_LooseChunk.Serialize_Xml">
            <summary>
            Serializes the data tree into an Xml string.
            </summary>
            <returns>A string containing the Xml content.</returns>
            <example> This sample shows how to create a new loose chunk and serialize some values.
            <code lang="cs">
            public string CreateXML(string archive_name, string[] item_names, int[] item_values)
            {
              GH_LooseChunk chunk = new GH_LooseChunk(archive_name);
              
              for (int i = 0; i &lt; item_names.Length; i++)
              {
                chunk.SetInt32(item_names[i], i, item_values[i]);
              }
              
              return chunk.Serialize_Xml();
            }
            </code>
            </example>
        </member>
        <member name="M:GH_IO.Serialization.GH_LooseChunk.Deserialize_Xml(System.String)">
            <summary>
            Deserializes an Xml string.
            </summary>
            <param name="xml_content">Xml to deserialize.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="T:GH_IO.Serialization.GH_Message_Type">
            <summary>
            Message type flag.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Message_Type.info">
            <summary>
            Indicates a message represents information.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Message_Type.warning">
            <summary>
            Indicates the message represents a warning. Warnings are not severe enough to be regarded as IO errors.
            </summary>
        </member>
        <member name="F:GH_IO.Serialization.GH_Message_Type.error">
            <summary>
            Indicates the message represents an error. Errors mean (de)serialization failed (partially).
            </summary>
        </member>
        <member name="T:GH_IO.Serialization.GH_Message">
            <summary>
            Represents an archive log message. 
            Messages are collected during read/write operations.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Message.#ctor">
            <summary>
            Fake constructor to avoid new instances being created by a PropertyGrid.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_Message.#ctor(System.String)">
            <summary>
            Create a new message of type GH_Message_Type.info
            </summary>
            <param name="message_content">Text content of message.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_Message.#ctor(System.String,GH_IO.Serialization.GH_Message_Type)">
            <summary>
            Create a new message.
            </summary>
            <param name="message_content">Text content of message.</param>
            <param name="message_type">Type of message, GH_Message_Type.unset is not a valid type.</param>
        </member>
        <member name="P:GH_IO.Serialization.GH_Message.Message">
            <summary>
            Gets the text content of this message.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_Message.Type">
            <summary>
            Gets the type of this message.
            </summary>
        </member>
        <member name="T:GH_IO.Serialization.GH_IChunk">
            <summary>
            Base interface for all Archive Chunks.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.Archive">
            <summary>
            Gets a pointer to the archive that owns the Root of the tree this chunk belongs to.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.ArchiveLocation">
            <summary>
            Gets a string representing the URI with which the archive is associated. 
            The location may be a null string.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.Name">
            <summary>
            Gets the name of this chunk. The name is set by the owner of this chunk. 
            Names must be at least 1 character long. 
            The combination of name+index is always unique among a set of chunks in a single litter.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.Index">
            <summary>
            Gets the index of this chunk. The index is set by the owner of this chunk. 
            Indices smaller than zero imply no index has been set. 
            The combination of name+index is always unique among a set of chunks in the same litter.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.ItemCount">
            <summary>
            Gets the number of items contained in this chunk. 
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.Items">
            <summary>
            Gets a pointer to the internal list of items. 
            Do not access this list unless you know what you are doing.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.ChunkCount">
            <summary>
            Gets the number of child chunks contained in this chunk. 
            The set of all child chunks is referred to as a 'litter'.
            </summary>
        </member>
        <member name="P:GH_IO.Serialization.GH_IChunk.Chunks">
            <summary>
            Gets a pointer to the internal list of child chunks. 
            Do not access this list unless you know what you are doing.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_IChunk.AddMessage(System.String,GH_IO.Serialization.GH_Message_Type)">
            <summary>
            Log a new message with the top-level archive. 
            Messages are collected during read/write operations, 
            and can be displayed to the user upon completion using GH_Archive.ShowMessageLog().
            </summary>
            <param name="m">Message text.</param>
            <param name="t">Message type.</param>
        </member>
        <member name="T:GH_IO.Serialization.GH_IWriter">
            <summary>
            Provides access to a subset of GH_Chunk methods used for writing archives.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.AddComment(System.String)">
            <summary>
            Adds a text comment to this chunk. Comments are serialized only if the output flavour is a 
            human readable format. Comments are never deserialized, they are purely for the benefit of the
            humans reading the file data.
            </summary>
            <param name="comment_text">The content of the comment, 
            text might be altered if it contains invalid characters for a chosen format flavour.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the content text is either null or empty.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.CreateChunk(System.String)">
            <summary>
            Create a new child chunk with the specified name but without an index qualifier. 
            If another chunk already exists with similar properties, an exception will be thrown.
            </summary>
            <param name="chunk_name">Name of new child chunk.</param>
            <exception cref="T:System.ArgumentException">
            Thrown if the name coordinte is already occupied by another chunk.
            </exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.CreateChunk(System.String,System.Int32)">
            <summary>
            Create a new child chunk with the specified name and index qualifier. 
            If another chunk already exists with similar properties, an exception will be thrown.
            </summary>
            <param name="chunk_name">Name of new child.</param>
            <param name="chunk_index">Index of new child.</param>
            <exception cref="T:System.ArgumentException">
            Thrown if the name+index coordinte is already occupied by another chunk.
            </exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.RemoveChunk(System.String)">
            <summary>
            Remove the first chunk with a matching name. 
            Only chunks without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="chunk_name">Name of chunk to remove.</param>
            <returns>True is chunk was removed, false if no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.RemoveChunk(System.String,System.Int32)">
            <summary>
            Remove the first chunk with a matching name and index. 
            Only chunks with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="chunk_name">Name of chunk to remove.</param>
            <param name="chunk_index">Index of chunk to remove.</param>
            <returns>True is chunk was removed, false if no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.RemoveChunk(GH_IO.Serialization.GH_IChunk)">
            <summary>
            Remove the specified chunk from the litter.
            </summary>
            <param name="chunk">Chunk to remove.</param>
            <returns>True is chunk was removed, false if chunk is not part of this litter.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if chunk is a null reference.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.RemoveItem(System.String)">
            <summary>
            Remove an unindexed item from this chunk.
            </summary>
            <param name="itemName">Name of item.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.RemoveItem(System.String,System.Int32)">
            <summary>
            Remove an indexed item from this chunk.
            </summary>
            <param name="itemName">Name of item.</param>
            <param name="itemIndex">Index of item.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetBoolean(System.String,System.Boolean)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetBoolean(System.String,System.Int32,System.Boolean)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetByte(System.String,System.Byte)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetByte(System.String,System.Int32,System.Byte)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInt32(System.String,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInt32(System.String,System.Int32,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInt64(System.String,System.Int64)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInt64(System.String,System.Int32,System.Int64)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetSingle(System.String,System.Single)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetSingle(System.String,System.Int32,System.Single)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDouble(System.String,System.Double)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDouble(System.String,System.Int32,System.Double)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDecimal(System.String,System.Decimal)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDecimal(System.String,System.Int32,System.Decimal)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDate(System.String,System.DateTime)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDate(System.String,System.Int32,System.DateTime)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetGuid(System.String,System.Guid)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetGuid(System.String,System.Int32,System.Guid)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetString(System.String,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add. If a null String is supplied, a zero-length String will be serialized.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetString(System.String,System.Int32,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add. If a null String is supplied, a zero-length String will be serialized.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPath(System.String,System.String,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="absolutePath">Absolute path to store.</param>
            <param name="basePath">Base path. This will be used to also store a relative path.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="absolutePath">Absolute path to store.</param>
            <param name="basePath">Base path. This will be used to also store a relative path.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingPoint(System.String,System.Drawing.Point)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingPoint(System.String,System.Int32,System.Drawing.Point)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingPointF(System.String,System.Drawing.PointF)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingPointF(System.String,System.Int32,System.Drawing.PointF)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingSize(System.String,System.Drawing.Size)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingSize(System.String,System.Int32,System.Drawing.Size)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingSizeF(System.String,System.Drawing.SizeF)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingSizeF(System.String,System.Int32,System.Drawing.SizeF)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingRectangle(System.String,System.Drawing.Rectangle)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingRectangle(System.String,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingRectangleF(System.String,System.Drawing.RectangleF)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingRectangleF(System.String,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingColor(System.String,System.Drawing.Color)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingColor(System.String,System.Int32,System.Drawing.Color)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingBitmap(System.String,System.Drawing.Bitmap)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDrawingBitmap(System.String,System.Int32,System.Drawing.Bitmap)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetByteArray(System.String,System.Byte[])">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetByteArray(System.String,System.Int32,System.Byte[])">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDoubleArray(System.String,System.Double[])">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetDoubleArray(System.String,System.Int32,System.Double[])">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPoint2D(System.String,GH_IO.Types.GH_Point2D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPoint2D(System.String,System.Int32,GH_IO.Types.GH_Point2D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPoint3D(System.String,GH_IO.Types.GH_Point3D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPoint3D(System.String,System.Int32,GH_IO.Types.GH_Point3D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPoint4D(System.String,GH_IO.Types.GH_Point4D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPoint4D(System.String,System.Int32,GH_IO.Types.GH_Point4D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInterval1D(System.String,GH_IO.Types.GH_Interval1D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInterval1D(System.String,System.Int32,GH_IO.Types.GH_Interval1D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInterval2D(System.String,GH_IO.Types.GH_Interval2D)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetInterval2D(System.String,System.Int32,GH_IO.Types.GH_Interval2D)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetLine(System.String,GH_IO.Types.GH_Line)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetLine(System.String,System.Int32,GH_IO.Types.GH_Line)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetBoundingBox(System.String,GH_IO.Types.GH_BoundingBox)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetBoundingBox(System.String,System.Int32,GH_IO.Types.GH_BoundingBox)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPlane(System.String,GH_IO.Types.GH_Plane)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetPlane(System.String,System.Int32,GH_IO.Types.GH_Plane)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetVersion(System.String,GH_IO.Types.GH_Version)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetVersion(System.String,System.Int32,GH_IO.Types.GH_Version)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="item_value">Value of item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetVersion(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The name must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="major">Major component of version structure.</param>
            <param name="minor">Minor component of version structure.</param>
            <param name="revision">Revision component of version structure.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name already exists.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IWriter.SetVersion(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add a new data item to this chunk. 
            The combination of name and index must be unique or an exception will be thrown.
            </summary>
            <param name="item_name">Name of item to add.</param>
            <param name="item_index">Index of item to add.</param>
            <param name="major">Major component of version structure.</param>
            <param name="minor">Minor component of version structure.</param>
            <param name="revision">Revision component of version structure.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if another item with the same name and index already exists.</exception>
        </member>
        <member name="T:GH_IO.Serialization.GH_IReader">
            <summary>
            Provides access to a subset of GH_Chunk methods used for reading archives.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.FindChunk(System.String)">
            <summary>
            Finds the first chunk in the litter that matches the given name. 
            Only chunks without index qualifiers are considered.
            </summary>
            <param name="name">Name of chunk to search for.</param>
            <returns>The child chunk that matches the given name, 
            or null of no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.FindChunk(System.String,System.Int32)">
            <summary>
            Finds the first chunk in the list that matches the given name and index. 
            Only chunks with index qualifiers are considered.
            </summary>
            <param name="name">Name of chunk to search for.</param>
            <param name="index">Index of chunk to search for. 
            If less than zero, FindChunk(string chunk_name) is called instead.</param>
            <returns>The child chunk that matches the given name and index, 
            or null of no matching chunk could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.ChunkExists(System.String)">
            <summary>
            Checks whether a chunk with the specified name exists in the litter. 
            Only chunks without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of chunk to test for.</param>
            <returns>True if a chunk with the specified name exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.ChunkExists(System.String,System.Int32)">
            <summary>
            Checks whether a chunk with the specified name and index exists in the litter. 
            Only chunks with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of chunk to test for.</param>
            <param name="index">Index of chunk to test for. 
            If less than zero, ChunkExists(string chunk_name) is called instead.</param>
            <returns>True if a chunk with the specified name and index exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.FindItem(System.String)">
            <summary>
            Finds the first item that matches the given name. 
            Only items without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to search for.</param>
            <returns>The item that matches the given name, 
            or null of no matching item could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.FindItem(System.String,System.Int32)">
            <summary>
            Finds the first item that matches the given name and index. 
            Only items with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to search for.</param>
            <param name="index">Index of item to search for. 
            If less than zero, then FindItem(string name) is called instead.</param>
            <returns>The item that matches the given name and index, 
            or null of no matching item could be found.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.ItemExists(System.String)">
            <summary>
            Checks whether an item with the specified name exists. 
            Only items without index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to test for.</param>
            <returns>True if an item with the specified name exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.ItemExists(System.String,System.Int32)">
            <summary>
            Checks whether an item with the specified name and index exists. 
            Only items with index qualifiers are considered. 
            Name comparisons are not case-sensitive.
            </summary>
            <param name="name">Name of item to test for.</param>
            <param name="index">Index of item to test for. 
            If index is less than zero, then ItemExists(string name) is called instead.</param>
            <returns>True if an item with the specified name and index exists, otherwise false.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetBoolean(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetBoolean(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetByte(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetByte(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInt32(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInt32(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInt64(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInt64(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetSingle(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetSingle(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDouble(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDouble(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDecimal(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDecimal(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDate(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDate(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetGuid(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetGuid(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetString(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetString(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPath(System.String,System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="basePath">Base path for relative path resolution.</param>
            <returns>An array of path strings. If the resolved relative path is different from the stored absolute path, two strings will be returned.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPath(System.String,System.Int32,System.String)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="basePath">Base path for relative path resolution.</param>
            <returns>An array of path strings. If the resolved relative path is different from the stored absolute path, two strings will be returned.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingPoint(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingPoint(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingPointF(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingPointF(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingSize(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingSize(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingSizeF(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingSizeF(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingRectangle(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingRectangle(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingRectangleF(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingRectangleF(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingColor(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingColor(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingBitmap(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDrawingBitmap(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetByteArray(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetByteArray(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDoubleArray(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetDoubleArray(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPoint2D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPoint2D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPoint3D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPoint3D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPoint4D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPoint4D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInterval1D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInterval1D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInterval2D(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetInterval2D(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetLine(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetLine(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetBoundingBox(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetBoundingBox(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPlane(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetPlane(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetVersion(System.String)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.GetVersion(System.String,System.Int32)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <returns>The inner value of the item.</returns>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
            <exception cref="T:System.NullReferenceException">Thrown if the item with the specified name and index does not exist.</exception>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetBoolean(System.String,System.Boolean@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetBoolean(System.String,System.Int32,System.Boolean@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetByte(System.String,System.Byte@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetByte(System.String,System.Int32,System.Byte@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInt32(System.String,System.Int32@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInt32(System.String,System.Int32,System.Int32@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInt64(System.String,System.Int64@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInt64(System.String,System.Int32,System.Int64@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetSingle(System.String,System.Single@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetSingle(System.String,System.Int32,System.Single@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDouble(System.String,System.Double@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDouble(System.String,System.Int32,System.Double@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDecimal(System.String,System.Decimal@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDecimal(System.String,System.Int32,System.Decimal@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDate(System.String,System.DateTime@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDate(System.String,System.Int32,System.DateTime@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetGuid(System.String,System.Guid@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetGuid(System.String,System.Int32,System.Guid@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetString(System.String,System.String@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetString(System.String,System.Int32,System.String@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingPoint(System.String,System.Drawing.Point@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingPoint(System.String,System.Int32,System.Drawing.Point@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingPointF(System.String,System.Drawing.PointF@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingPointF(System.String,System.Int32,System.Drawing.PointF@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingSize(System.String,System.Drawing.Size@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingSize(System.String,System.Int32,System.Drawing.Size@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingSizeF(System.String,System.Drawing.SizeF@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingSizeF(System.String,System.Int32,System.Drawing.SizeF@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingRectangle(System.String,System.Drawing.Rectangle@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingRectangle(System.String,System.Int32,System.Drawing.Rectangle@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingRectangleF(System.String,System.Drawing.RectangleF@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingRectangleF(System.String,System.Int32,System.Drawing.RectangleF@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingColor(System.String,System.Drawing.Color@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetDrawingColor(System.String,System.Int32,System.Drawing.Color@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPoint2D(System.String,GH_IO.Types.GH_Point2D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPoint2D(System.String,System.Int32,GH_IO.Types.GH_Point2D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPoint3D(System.String,GH_IO.Types.GH_Point3D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPoint3D(System.String,System.Int32,GH_IO.Types.GH_Point3D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPoint4D(System.String,GH_IO.Types.GH_Point4D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPoint4D(System.String,System.Int32,GH_IO.Types.GH_Point4D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInterval1D(System.String,GH_IO.Types.GH_Interval1D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInterval1D(System.String,System.Int32,GH_IO.Types.GH_Interval1D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInterval2D(System.String,GH_IO.Types.GH_Interval2D@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetInterval2D(System.String,System.Int32,GH_IO.Types.GH_Interval2D@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetLine(System.String,GH_IO.Types.GH_Line@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetLine(System.String,System.Int32,GH_IO.Types.GH_Line@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetBoundingBox(System.String,GH_IO.Types.GH_BoundingBox@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetBoundingBox(System.String,System.Int32,GH_IO.Types.GH_BoundingBox@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPlane(System.String,GH_IO.Types.GH_Plane@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetPlane(System.String,System.Int32,GH_IO.Types.GH_Plane@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetVersion(System.String,GH_IO.Types.GH_Version@)">
            <summary>
            Gets the value of the item with the specified name. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:GH_IO.Serialization.GH_IReader.TryGetVersion(System.String,System.Int32,GH_IO.Types.GH_Version@)">
            <summary>
            Gets the value of the item with the specified name and index. 
            Name comparison is not case-sensitive.
            </summary>
            <param name="item_name">Name of item to retrieve.</param>
            <param name="item_index">Index of item to retrieve.</param>
            <param name="value">Target of assignment.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="T:GH_IO.Serialization.GH_IBinarySupport">
            <summary>
            Interface which declares all methods required for objects that 
            can be (de)serialized to and from a binary archive.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_IBinarySupport.Write(System.IO.BinaryWriter)">
            <summary>
            Called when an object is required to serialize itself.
            </summary>
            <param name="writer">Writer object to be used for serialization.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_IBinarySupport.Read(System.IO.BinaryReader)">
            <summary>
            Called when an object is required to deserialize itself.
            </summary>
            <param name="reader">Reader object to be used for deserialization.</param>
        </member>
        <member name="T:GH_IO.Serialization.GH_IXmlSupport">
            <summary>
            Interface which declares all methods required for objects that 
            can be (de)serialized to and from an Xml archive.
            </summary>
        </member>
        <member name="M:GH_IO.Serialization.GH_IXmlSupport.Write(System.Xml.XmlWriter)">
            <summary>
            Called when an object is required to serialize itself.
            </summary>
            <param name="writer">Writer object to be used for serialization.</param>
        </member>
        <member name="M:GH_IO.Serialization.GH_IXmlSupport.Read(System.Xml.XmlNode)">
            <summary>
            Called when an object is required to deserialize itself.
            </summary>
            <param name="node">Node object to be used for deserialization.</param>
        </member>
        <member name="T:GH_IO.UserInterface.GH_ArchiveMessageViewer">
            <summary>
            Viewer/Browser that displays a list of archive messages.
            </summary>
        </member>
        <member name="M:GH_IO.UserInterface.GH_ArchiveMessageViewer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GH_IO.UserInterface.GH_ArchiveMessageViewer.SetArchive(GH_IO.Serialization.GH_Archive)">
            <summary>
            Set a new archive. The messages in this archive will be displayed on the form.
            </summary>
            <param name="nArchive"></param>
        </member>
        <member name="F:GH_IO.UserInterface.GH_ArchiveMessageViewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GH_IO.UserInterface.GH_ArchiveMessageViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GH_IO.UserInterface.GH_ArchiveMessageViewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GH_IO.UserInterface.GH_DeveloperDetails">
            <summary>
            Constains a set of static fields and properties regarding 
            developer contact details.
            </summary>
        </member>
        <member name="P:GH_IO.UserInterface.GH_DeveloperDetails.DefaultDeveloperContact">
            <summary>
            Gets the default developer contact details.
            </summary>
        </member>
        <member name="F:GH_IO.UserInterface.GH_DeveloperDetails.m_developer_contact">
            <summary>
            Field containing the current developer contact. 
            By default, this field is set to DefaultDeveloperContact;
            </summary>
        </member>
        <member name="P:GH_IO.UserInterface.GH_DeveloperDetails.DeveloperContact">
            <summary>
            Gets or sets the local developer contact info (e-mail). 
            By default, the developer email is DefaultDeveloperContact; 
            This email address is used in the Message Report viewer when sending a support e-mail.
            </summary>
        </member>
        <member name="T:GH_IO.Types.GH_Version">
            <summary>
            Basic version type. Contains Major, Minor and Revision fields.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Version.major">
            <summary>
            Major component of version structure.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Version.minor">
            <summary>
            Minor component of version structure.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Version.revision">
            <summary>
            Revision component of version structure.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Version.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Default constructor. Create a new version from specified fields.
            </summary>
            <param name="v_major">Major component of version.</param>
            <param name="v_minor">Minor component of version.</param>
            <param name="v_revision">Revision component of version.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Version.#ctor(GH_IO.Types.GH_Version)">
            <summary>
            Copy constructor. Duplicate an existing version structure.
            </summary>
            <param name="other">Version to duplicate.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Version.op_Equality(GH_IO.Types.GH_Version,GH_IO.Types.GH_Version)">
            <summary>
            Compares two version structures for equality.
            </summary>
            <param name="A">Version to compare.</param>
            <param name="B">Version to compare with.</param>
            <returns>True if all version fields in A and B are equal.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.op_Inequality(GH_IO.Types.GH_Version,GH_IO.Types.GH_Version)">
            <summary>
            Compares two version structures for inequality.
            </summary>
            <param name="A">Version to compare.</param>
            <param name="B">Version to compare with.</param>
            <returns>True if A is different from B.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.op_LessThan(GH_IO.Types.GH_Version,GH_IO.Types.GH_Version)">
            <summary>
            Compares versions for smaller than relationships.
            </summary>
            <param name="A">Version to compare.</param>
            <param name="B">Version to compare with.</param>
            <returns>True if A represents an older version than B.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.op_LessThanOrEqual(GH_IO.Types.GH_Version,GH_IO.Types.GH_Version)">
            <summary>
            Compares versions for smaller than or equal to relationships.
            </summary>
            <param name="A">Version to compare.</param>
            <param name="B">Version to compare with.</param>
            <returns>True if A is older than or equal to B.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.op_GreaterThan(GH_IO.Types.GH_Version,GH_IO.Types.GH_Version)">
            <summary>
            Compares versions for larger than relationships.
            </summary>
            <param name="A">Version to compare.</param>
            <param name="B">Version to compare with.</param>
            <returns>True if A is newer than B.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.op_GreaterThanOrEqual(GH_IO.Types.GH_Version,GH_IO.Types.GH_Version)">
            <summary>
            Compares versions for larger than or equal to relationships.
            </summary>
            <param name="A">Version to compare.</param>
            <param name="B">Version to compare with.</param>
            <returns>True if A is newer than or equal to B.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.ToString">
            <summary>
            Default formatter for Version data: M.m.RRRR 
            Revision section is padded with zeroes until it is at least 4 digits long.
            </summary>
            <returns>A string represtation of the Version structure.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for the current version object.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Version.Equals(System.Object)">
            <summary>
            Performs value equality comparison.
            </summary>
            <param name="obj">Object to compare with. 
            If obj is a null reference or not a GH_Version instance, false is returned.</param>
            <returns>True if obj is a GH_Version instance which is equal to this one.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Interval1D">
            <summary>
            Represents two double precision floating point values. 
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Interval1D.a">
            <summary>
            Start of interval.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Interval1D.b">
            <summary>
            End of interval.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Interval1D.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="na">Start of interval.</param>
            <param name="nb">End of interval.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Interval1D.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the Interval structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Interval2D">
            <summary>
            Represents two double precision domains.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Interval2D.u">
            <summary>
            One dimensional component in U direction.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Interval2D.v">
            <summary>
            One dimensional component in V direction.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Interval2D.#ctor(GH_IO.Types.GH_Interval1D,GH_IO.Types.GH_Interval1D)">
            <summary>
            Constructor.
            </summary>
            <param name="nu">Interval component in U direction.</param>
            <param name="nv">Interval component in V direction.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Interval2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="nu0">Start of interval component in U direction.</param>
            <param name="nu1">End of interval component in U direction.</param>
            <param name="nv0">Start of interval component in V direction.</param>
            <param name="nv1">End of interval component in V direction.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Interval2D.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the two-dimensional Interval structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Point2D">
            <summary>
            Represents a 2D point coordinate with double precision floating point components.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point2D.x">
            <summary>
            X coordinate of point.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point2D.y">
            <summary>
            Y coordinate of point.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Point2D.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="nx">X coordinate of point.</param>
            <param name="ny">Y coordinate of point.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Point2D.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the two-dimenionsional point structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Point3D">
            <summary>
            Represents a 3D point coordinate with double precision floating point components.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point3D.x">
            <summary>
            X coordinate of point.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point3D.y">
            <summary>
            Y coordinate of point.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point3D.z">
            <summary>
            Z coordinate of point.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Point3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="nx">X coordinate of point.</param>
            <param name="ny">Y coordinate of point.</param>
            <param name="nz">Z coordinate of point.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Point3D.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the three-dimenionsional point structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Point4D">
            <summary>
            Represents a 4D point coordinate with double precision floating point components.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point4D.x">
            <summary>
            X coordinate of point.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point4D.y">
            <summary>
            Y coordinate of point.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point4D.z">
            <summary>
            Z coordinate of point.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Point4D.w">
            <summary>
            W coordinate of point.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Point4D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="nx">X coordinate of point.</param>
            <param name="ny">Y coordinate of point.</param>
            <param name="nz">Z coordinate of point.</param>
            <param name="nw">W coordinate of point.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Point4D.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the four-dimenionsional point structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Line">
            <summary>
            Represents a 3D line segment, denoted by start and endpoints.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Line.A">
            <summary>
            Start of line.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Line.B">
            <summary>
            End of line.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Line.#ctor(GH_IO.Types.GH_Point3D,GH_IO.Types.GH_Point3D)">
            <summary>
            Constructor.
            </summary>
            <param name="nA">Start of line.</param>
            <param name="nB">End of line.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Line.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="Ax">X coordinate of start point.</param>
            <param name="Ay">Y coordinate of start point.</param>
            <param name="Az">Z coordinate of start point.</param>
            <param name="Bx">X coordinate of end point.</param>
            <param name="By">Y coordinate of end point.</param>
            <param name="Bz">Z coordinate of end point.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Line.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the line structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_BoundingBox">
            <summary>
            Represents a 3D bounding box, denoted by two points.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_BoundingBox.Min">
            <summary>
            Minimum corner of box.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_BoundingBox.Max">
            <summary>
            Maximum corner of box.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_BoundingBox.#ctor(GH_IO.Types.GH_Point3D,GH_IO.Types.GH_Point3D)">
            <summary>
            Constructor.
            </summary>
            <param name="nMin">Minimum corner of box.</param>
            <param name="nMax">Maximum corner of box.</param>
        </member>
        <member name="M:GH_IO.Types.GH_BoundingBox.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="Minx">X coordinate of minimum corner.</param>
            <param name="Miny">Y coordinate of minimum corner.</param>
            <param name="Minz">Z coordinate of minimum corner.</param>
            <param name="Maxx">X coordinate of maximum corner.</param>
            <param name="Maxy">Y coordinate of maximum corner.</param>
            <param name="Maxz">Z coordinate of maximum corner.</param>
        </member>
        <member name="M:GH_IO.Types.GH_BoundingBox.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the box structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Plane">
            <summary>
            Represents a 3D plane system, defined by origin point and {X,Y} axis directions.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Plane.Origin">
            <summary>
            Origin point of plane.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Plane.XAxis">
            <summary>
            X axis vector of plane.
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Plane.YAxis">
            <summary>
            Y axis vector of plane.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Plane.#ctor(GH_IO.Types.GH_Point3D,GH_IO.Types.GH_Point3D,GH_IO.Types.GH_Point3D)">
            <summary>
            Constructor.
            </summary>
            <param name="nOrigin">Origin of plane.</param>
            <param name="nXAxis">X axis of plane.</param>
            <param name="nYAxis">Y axis of plane.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Plane.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="Ox">X coordinate of plane origin.</param>
            <param name="Oy">Y coordinate of plane origin.</param>
            <param name="Oz">Z coordinate of plane origin.</param>
            <param name="Xx">X component of plane x axis.</param>
            <param name="Xy">Y component of plane x axis.</param>
            <param name="Xz">Z component of plane x axis.</param>
            <param name="Yx">X component of plane y axis.</param>
            <param name="Yy">Y component of plane y axis.</param>
            <param name="Yz">Z component of plane y axis.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Plane.ToString">
            <summary>
            Converts this structure to a human-readable string.
            </summary>
            <returns>A string representation of the plane structure.</returns>
        </member>
        <member name="T:GH_IO.Types.GH_Item">
            <summary>
            Represents a single data item in a chunk.
            </summary>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Boolean)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Byte)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Byte)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int64)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Int64)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Single)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Single)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Double)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Double)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Decimal)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Decimal)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.DateTime)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.DateTime)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Guid)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Guid)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.String)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Byte[])">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Byte[])">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Double[])">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Double[])">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.Point)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.Point)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.PointF)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.PointF)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.Size)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.Size)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.SizeF)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.Rectangle)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.RectangleF)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.Color)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.Color)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Drawing.Bitmap)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,System.Drawing.Bitmap)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Point2D)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Point2D)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Point3D)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Point3D)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Point4D)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Point4D)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Interval1D)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Interval1D)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Interval2D)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Interval2D)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Line)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Line)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_BoundingBox)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_BoundingBox)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Plane)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Plane)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,GH_IO.Types.GH_Version)">
            <summary>
            Construct a new instance of GH_Item with the specified name and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.#ctor(System.String,System.Int32,GH_IO.Types.GH_Version)">
            <summary>
            Construct a new instance of GH_Item with the specified name, index and value.
            </summary>
            <param name="item_name">Name of new item.</param>
            <param name="item_index">Index of new item. Any index less than zero will be clamped to -1.</param>
            <param name="item_data">Value of new item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified name string is null or empty.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.CreateFrom(System.IO.BinaryReader)">
            <summary>
            Creates a new instance of GH_Item and sets the fields from a reader object.
            </summary>
            <param name="reader">Reader object that defines the field data.</param>
            <returns>The constructed and read item.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Item.CreateFrom(System.Xml.XmlNode)">
            <summary>
            Creates a new instance of GH_Item and sets the fields from an Xml node object.
            </summary>
            <param name="node">Xml node object that defines the field data.</param>
            <returns>The constructed and read item.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Item.Write(System.IO.BinaryWriter)">
            <summary>
            Serialize this item into a binary stream.
            </summary>
            <param name="writer">Writer to serialize with.</param>
            <exception cref="T:System.MemberAccessException">Thrown if !HasName.</exception>
            <exception cref="T:System.MemberAccessException">Thrown if !HasType.</exception>
            <exception cref="T:System.IO.IOException">Thrown if the internal data could not be serialized.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.Read(System.IO.BinaryReader)">
            <summary>
            Deserialize this item from a binary stream.
            </summary>
            <param name="reader">Reader to deserialize with.</param>
        </member>
        <member name="M:GH_IO.Types.GH_Item.Write(System.Xml.XmlWriter)">
            <summary>
            Serialize this item into an Xml stream.
            </summary>
            <param name="writer">Writer to serialize with.</param>
            <exception cref="T:System.MemberAccessException">Thrown if !HasName.</exception>
            <exception cref="T:System.MemberAccessException">Thrown if !HasType.</exception>
            <exception cref="T:System.IO.IOException">Thrown if the internal data could not be serialized.</exception>
        </member>
        <member name="M:GH_IO.Types.GH_Item.SanitizeXMLString(System.String)">
            <summary>
            Remove invalid XML chars from a string.
            </summary>
            <param name="xml">Xml string to sanitize.</param>
            <returns>A sanitized string.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Item.IsLegalXmlChar(System.Int32)">
            <summary>
            Test whether a character UTF8 code is a valid Xml char.
            </summary>
            <param name="character">Char code to test.</param>
            <returns>True if the character is a valid Xml char.</returns>
        </member>
        <member name="M:GH_IO.Types.GH_Item.Read(System.Xml.XmlNode)">
            <summary>
            Deserialize this item from an Xml node.
            </summary>
            <param name="node">Xml node to serialize from.</param>
        </member>
        <member name="P:GH_IO.Types.GH_Item.HasType">
            <summary>
            Gets the type set validity of this item. 
            The item is considered to have a type if type != GH_Types.unset
            </summary>
        </member>
        <member name="P:GH_IO.Types.GH_Item.HasName">
            <summary>
            Gets the name validity of this item. 
            The item is considered to have an invalid name if string.IsNullOrEmpty(name)
            </summary>
        </member>
        <member name="P:GH_IO.Types.GH_Item.HasIndex">
            <summary>
            Gets the index existence implication. The item is considered to have an index qualifier 
            if the index value is larger than or equal to zero.
            </summary>
        </member>
        <member name="P:GH_IO.Types.GH_Item.Type">
            <summary>
            Gets the type of this item. 
            Type flags are set during construction and cannot be altered.
            </summary>
        </member>
        <member name="P:GH_IO.Types.GH_Item.Name">
            <summary>
            Gets or sets the name of this item. 
            Typically, names are set at construction and do not change. 
            If you change names after construction, you could corrupt an archive.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown if the new name is null or empty.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item.Index">
            <summary>
            Gets or sets the index of an item. 
            Typically, indices are set at construction and do not change. 
            If you change indices after construction, you could corrupt an archive.
            </summary>
            <value>Negative indices are clamped to -1.</value>
        </member>
        <member name="M:GH_IO.Types.GH_Item.ToString">
            <summary>
            Converts the struct into a human readable format.
            </summary>
        </member>
        <member name="P:GH_IO.Types.GH_Item.DebuggerDisplay">
            <summary>
            Readonly property used during Debugging.
            </summary>
            <exclude/>
        </member>
        <member name="P:GH_IO.Types.GH_Item.InternalData">
            <summary>
            Retrieves the internal data of this item. 
            No type casting is performed.
            </summary>
        </member>
        <member name="P:GH_IO.Types.GH_Item._bool">
            <summary>
            Returns the internal data of this item cast to a Boolean.
            If the data is not stored as a Boolean, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._byte">
            <summary>
            Returns the internal data of this item cast to a Byte.
            If the data is not stored as a Byte, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._int32">
            <summary>
            Returns the internal data of this item cast to an Int32.
            If the data is not stored as an Int32, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._int64">
            <summary>
            Returns the internal data of this item cast to an Int64.
            If the data is not stored as an Int64, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._single">
            <summary>
            Returns the internal data of this item cast to a Single.
            If the data is not stored as a Single, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._double">
            <summary>
            Returns the internal data of this item cast to a Double.
            If the data is not stored as a Double, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._decimal">
            <summary>
            Returns the internal data of this item cast to a Decimal.
            If the data is not stored as a Decimal, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._date">
            <summary>
            Returns the internal data of this item cast to a DateTime.
            If the data is not stored as a DateTime, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._guid">
            <summary>
            Returns the internal data of this item cast to a Guid.
            If the data is not stored as a Guid, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._string">
            <summary>
            Returns the internal data of this item cast to a String.
            If the data is not stored as a String, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._bytearray">
            <summary>
            Returns the internal data of this item cast to a Byte array.
            If the data is not stored as a Byte array, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._doublearray">
            <summary>
            Returns the internal data of this item cast to a Byte array.
            If the data is not stored as a Byte array, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_point">
            <summary>
            Returns the internal data of this item cast to a Point.
            If the data is not stored as a Point, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_pointf">
            <summary>
            Returns the internal data of this item cast to a PointF.
            If the data is not stored as a PointF, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_size">
            <summary>
            Returns the internal data of this item cast to a Size.
            If the data is not stored as a Size, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_sizef">
            <summary>
            Returns the internal data of this item cast to a SizeF.
            If the data is not stored as a SizeF, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_rectangle">
            <summary>
            Returns the internal data of this item cast to a Rectangle.
            If the data is not stored as a Rectangle, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_rectanglef">
            <summary>
            Returns the internal data of this item cast to a RectangleF.
            If the data is not stored as a RectangleF, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_color">
            <summary>
            Returns the internal data of this item cast to a Color.
            If the data is not stored as a Color, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._drawing_bitmap">
            <summary>
            Returns the internal data of this item cast to a Bitmap.
            If the data is not stored as a Bitmap, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._point2d">
            <summary>
            Returns the internal data of this item cast to a Point2D.
            If the data is not stored as a Point2D, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._point3d">
            <summary>
            Returns the internal data of this item cast to a Point3D.
            If the data is not stored as a Point3D, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._point4d">
            <summary>
            Returns the internal data of this item cast to a Point4D.
            If the data is not stored as a Point4D, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._interval1d">
            <summary>
            Returns the internal data of this item cast to an Interval1D.
            If the data is not stored as an Interval1D, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._interval2d">
            <summary>
            Returns the internal data of this item cast to an Interval2D.
            If the data is not stored as an Interval2D, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._line">
            <summary>
            Returns the internal data of this item cast to a Line.
            If the data is not stored as a Line, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._boundingbox">
            <summary>
            Returns the internal data of this item cast to a BoundingBox.
            If the data is not stored as a BoundingBox, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._plane">
            <summary>
            Returns the internal data of this item cast to a Plane.
            If the data is not stored as a Plane, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="P:GH_IO.Types.GH_Item._version">
            <summary>
            Returns the internal data of this item cast to a Version.
            If the data is not stored as a Version, a conversion exception might be thrown.
            </summary>
            <exception cref="T:System.OverflowException">Thrown if the type conversion fails.</exception>
            <exception cref="T:System.InvalidCastException">Thrown if the type conversion is invalid.</exception>
        </member>
        <member name="T:GH_IO.Types.GH_Types">
            <summary>
            Contains flags for all data types currently supported by GH_IO.dll
            </summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.unset">
            <summary>Represents an unset type. GH_Items with this type will throw exceptions during serialization.</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_bool">
            <summary>boolean</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_byte">
            <summary>byte</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_int32">
            <summary>32 bit integer</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_int64">
            <summary>64 bit integer</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_single">
            <summary>single precision floating point number</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_double">
            <summary>double precision floating point number</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_decimal">
            <summary>decimal number</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_date">
            <summary>date time structure</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_guid">
            <summary>128 bit globally unique identifier</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_string">
            <summary>unicode string</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_bytearray">
            <summary>an array of bytes</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_doublearray">
            <summary>an array of doubles</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_point">
            <summary>gdi+ integer precision point</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_pointf">
            <summary>gdi+ single precision point</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_size">
            <summary>gdi+ integer precision size</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_sizef">
            <summary>gdi+ single precision size</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_rectangle">
            <summary>gdi+ integer precision rectangle</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_rectanglef">
            <summary>gdi+ single precision rectangle</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_color">
            <summary>gdi+ argb color</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_drawing_bitmap">
            <summary>gdi+ bitmap (png format bytestream)</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_point2d">
            <summary>double precision two-dimensional point</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_point3d">
            <summary>double precision three-dimensional point</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_point4d">
            <summary>double precision four-dimensional point</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_interval1d">
            <summary>double precision one-dimensional numeric interval</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_interval2d">
            <summary>double precision two-dimensional numeric interval</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_line">
            <summary>double precision three-dimensional line segment</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_boundingbox">
            <summary>double precision three-dimensional box volume</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_plane">
            <summary>double precision three-dimensional plane construct</summary>
        </member>
        <member name="F:GH_IO.Types.GH_Types.gh_version">
            <summary>version structure with major, minor and revision fields</summary>
        </member>
        <member name="T:GH_IO.GH_ISerializable">
            <summary>
            Every object which needs to (de)serialize itself using GH_IO methodology
            must implement this interface.
            </summary>
        </member>
        <member name="M:GH_IO.GH_ISerializable.Write(GH_IO.Serialization.GH_IWriter)">
            <summary>
            This method is called whenever the instance is required to serialize itself.
            </summary>
            <param name="writer">Writer object to serialize with.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="M:GH_IO.GH_ISerializable.Read(GH_IO.Serialization.GH_IReader)">
            <summary>
            This method is called whenever the instance is required to deserialize itself.
            </summary>
            <param name="reader">Reader object to deserialize from.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="T:GH_IO.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GH_IO.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GH_IO.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GH_IO.Properties.Resources.DisplayHelp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GH_IO.Properties.Resources.MailMessages">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GH_IO.Properties.Resources.SaveMessages">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GH_IO.Properties.Resources.SortByTime">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:GH_IO.VersionNumber">
            <summary>
            Represents a product version number that encodes major, minor, time and build branch information.
            as major.minor.yyddd.hhmmb where:
            yy = year of build - 2000
            ddd = year day of build (1-366)
            hh = hour of build
            mm = minute of build
            b = branch of build
            </summary>
        </member>
        <member name="T:GH_IO.VersionNumber.Branch">
            <summary>
            Build branch, set by the build process.
            </summary>
        </member>
        <member name="F:GH_IO.VersionNumber.Branch.Unset">
            <summary>
            Uninitialized value.
            </summary>
        </member>
        <member name="F:GH_IO.VersionNumber.Branch.Developer">
            <summary>
            Private developer build; should never be released to the public.
            </summary>
        </member>
        <member name="F:GH_IO.VersionNumber.Branch.Trunk">
            <summary>
            Mainline trunk build. May be released to the public.
            </summary>
        </member>
        <member name="F:GH_IO.VersionNumber.Branch.ReleaseCandidate">
            <summary>
            Release candidate build. Will be released to the public.
            </summary>
        </member>
        <member name="F:GH_IO.VersionNumber.Branch.Release">
            <summary>
            Final Release build. Will be released to the public.
            </summary>
        </member>
        <member name="M:GH_IO.VersionNumber.#ctor(System.Int32,System.Int32,System.DateTime,GH_IO.VersionNumber.Branch)">
            <summary>
            Initializes a new instance of the VersionNumber structure to the version specified by the parameters.
            </summary>
            <param name="major">
            The major version number (0 through 63).
            </param>
            <param name="minor">
            The minor version number (0 through 127).
            </param>
            <param name="time">
            The time is the version time (January 1, 2000 00:00 through December 31 23:59). Seconds are ignored.
            </param>
            <param name="buildBranch">
            The branch used to build the product (developer, trunk, release_candidate, or release).
            </param>
        </member>
        <member name="M:GH_IO.VersionNumber.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VersionNumber structure to the version specified by the version quartet values.
            </summary>
            <param name="majorVersionNumber">
            The major version number (0 through 63).
            </param>
            <param name="minorVersionNumber">
            The minor version number (0 through 127)
            </param>
            <param name="versionQuartetYyddd">
            The third version quartet value is (year - 2000)*1000 + yday, where year is 2000 to 2099 and yday is 1 to the number of days in the specified year.
            </param>
            <param name="versionQuartetHhmmb">
            The forth version quartet value is (hour*1000 + minute*10 + branch) where hour is 0 to 23, minute is 0 to 59, and branch is 0 to 3.
            </param>
        </member>
        <member name="M:GH_IO.VersionNumber.#ctor(System.Version)">
            <summary>
            Construct VersionNumber based on existing System.Version class.
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:GH_IO.VersionNumber.CompareTo(GH_IO.VersionNumber)">
            <summary>
            Compares the value of this instance to a specified VersionNumber value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified VersionNumber value.
            </summary>
            <param name="value">
            The object to compare to the current instance.
            </param>
            <returns>
            A signed number indicating the relative values of this instance and the value parameter.
            Less than zero indicates this instance is earier than value.
            Zero indicates this instance is the same as value.
            Greater than zero indicates this instance is later than value.
            </returns>
        </member>
        <member name="M:GH_IO.VersionNumber.CompareTo(System.Object)">
            <summary>
            Compares the value of this instance to a specified VersionNumber value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified VersionNumber value.
            </summary>
            <param name="value">
            The object to compare to the current instance.
            </param>
            <returns>
            A signed number indicating the relative values of this instance and the value parameter.
            Less than zero indicates this instance is earier than value.
            Zero indicates this instance is the same as value.
            Greater than zero indicates this instance is later than value.
            </returns>
        </member>
        <member name="P:GH_IO.VersionNumber.Unset">
            <summary>
            The Unset VersionNumber. VersionNumber.Unset.IsValid is false.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MinValid">
            <summary>
            The smallest possible valid VersionNumber.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MaxValid">
            <summary>
            The largest possible valid VersionNumber.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.IsValid">
            <summary>
            True when all information in the VersionNumber has valid values.
            </summary>      
        </member>
        <member name="P:GH_IO.VersionNumber.MinMajorVersionNumber">
            <summary>
            The smallest possible valid value of VersionNumber.MajorVersionNumber.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MaxMajorVersionNumber">
            <summary>
            The largest possible valid value of VersionNumber.MajorVersionNumber.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.UnsetTime">
            <summary>
            The value of an Unset VersionNumber.Time.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MinValidTime">
            <summary>
            The smallest possible valid value of VersionNumber.Time.  This field is read-only.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MaxValidTime">
            <summary>
            The largest possible valid value of VersionNumber.Time.  This field is read-only.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.UnsetBuildBranch">
            <summary>
            The value of an Unset VersionNumber.BuildBranch.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MinValidBuildBranch">
            <summary>
            Represents the smallest possible valid value of VersionNumber.BuildBranch.  This field is read-only.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MaxValidBuildBranch">
            <summary>
            Represents the largest possible valid value of VersionNumber.BuildBranch.  This field is read-only.
            </summary>
        </member>
        <member name="M:GH_IO.VersionNumber.ToString">
            <summary>
             Converts the value of the current VersionNumber object to its equivalent string representation major.minor.yyddd.hhmmb. (Overrides ValueType.ToString().)
            </summary>         
        </member>
        <member name="M:GH_IO.VersionNumber.ToVersion">
            <summary>
            Convert this VersionNumber class to System.Version()
            </summary>
            <returns></returns>
        </member>
        <member name="M:GH_IO.VersionNumber.TryParse(System.String,GH_IO.VersionNumber@)">
            <summary>
            Converts the specified string representation of a version number to its VersionNumber equivalent and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="s">
            A string containing four integers separated by full stops in the format major.minor.yyddd.hhmmb, where yy is year-2000, ddd is the day of the year, hh is the hour, mm is the minute and b identifies the build branch.
            </param>
            <param name="result">
            When this method returns, result contains the VersionNumber value equivalent to the version number contained in s, if the conversion succeeded, or VersionNumber.Unset if the conversion failed. The conversion fails if the s parameter is null, is an empty string (""), or does not contain a valid string representation of version number. This parameter is passed uninitialized.
            </param>
            <returns></returns>
        </member>
        <member name="M:GH_IO.VersionNumber.TryParse(System.Version,GH_IO.VersionNumber@)">
            <summary>
            Attempt so convert the System.Version representation of a version number to its VersionNumber equivalent and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="v">
            A version number with quartet values (v.Major, v.Minor, v.Build, v.Revision) that are valid ((0 to 63),(0 to 127), (1 to 99365), (0 to 23593)).
            </param>
            <param name="result">
            When this method returns, result contains the VersionNumber value equivalent to the version number contained in v, if the conversion succeeded, or VersionNumber.Unset if the conversion failed. The conversion fails if the v parameter is null, is an empty string (""), or does not contain a valid string representation of version number. This parameter is passed uninitialized.
            </param>
            <returns></returns>    
        </member>
        <member name="P:GH_IO.VersionNumber.Major">
            <summary>
            Gets the major version number component of this instance.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.Minor">
            <summary>
            Gets the minor version number component of this instance.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MinMinorVersionNumber">
            <summary>
            The smallest possible valid value of VersionNumber.MinorVersionNumber.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.MaxMinorVersionNumber">
            <summary>
            The largest possible valid value of VersionNumber.MinorVersionNumber.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.Time">
            <summary>
            Gets the version time component of this instance.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.BuildBranch">
            <summary>
            Gets the build branch component of this instance.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.VersionQuartetValue1">
            <summary>
            Gets the first version quartet value of this instance. This is the first number in the string format.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.VersionQuartetValue2">
            <summary>
            Gets the second version quartet value of this instance. This is the second number in the string format.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.VersionQuartetValue3">
            <summary>
            Gets the third version quartet value of this instance. This is the third number in the string format.
            </summary>
        </member>
        <member name="P:GH_IO.VersionNumber.VersionQuartetValue4">
            <summary>
            Gets the forth version quartet value of this instance. This is the forth number in the string format.
            </summary>
        </member>
    </members>
</doc>
